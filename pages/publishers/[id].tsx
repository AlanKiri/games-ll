import Head from "next/head";
import { useRouter } from "next/router";
import React, { useContext, useEffect } from "react";
import InfiniteScroll from "react-infinite-scroll-component";
import { Oval } from "react-loader-spinner";
import { Listitem, Navbar, Navbarbot } from "../../components";
import { Store } from "../../stores/store";

const PublisherId = () => {
  const router = useRouter();
  const { id } = router.query;

  const { queryStore } = useContext(Store);

  const getGames = async () => {
    if (typeof id === "string") {
      await queryStore.getGenreById(id);
      await queryStore.getGamesByGenre(id);
    }
  };
  const expandGames = async () => {
    await queryStore.expandGames();
  };

  const { genre, games } = queryStore;

  useEffect(() => {
    getGames();
  }, [id]);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Navbar />
      <Navbarbot />
      {queryStore.isLoading ? (
        <div className="w-full h-screen flex justify-center items-center">
          <Oval color="white" />
        </div>
      ) : (
        games &&
        queryStore.count && (
          <InfiniteScroll
            dataLength={games.length}
            next={expandGames}
            hasMore={games.length < queryStore.count}
            loader={<h4>Loading...</h4>}
          >
            <main className="flex flex-col gap-3">
              <div className="flex flex-row">
                <div className="flex flex-col 2xl:flex-row px-4 gap-4">
                  <h4 className="text-6xl lg:text-9xl">{genre?.name}</h4>
                  <p className="text-xs lg:text-sm">{genre?.description}</p>
                </div>
              </div>
              {games &&
                games.map((game) => {
                  return (
                    <Listitem
                      key={game.id}
                      background_image={game.background_image}
                      gameid={game.id}
                      parent_platforms={game.parent_platforms}
                      release_date={game.released}
                      stars={game.rating}
                      title={game.name}
                    />
                  );
                })}
            </main>
          </InfiniteScroll>
        )
      )}
      <footer></footer>
    </div>
  );
};

export default PublisherId;
