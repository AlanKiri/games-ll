import { observer } from "mobx-react-lite";
import Head from "next/head";
import { useRouter } from "next/router";
import React, { useContext, useEffect } from "react";
import InfiniteScroll from "react-infinite-scroll-component";
import { Oval } from "react-loader-spinner";
import { Listitem, Navbar, Navbarbot } from "../../../components";
import { Store } from "../../../stores/store";
import Layout from "../../layout";

const SearchQuery = observer(() => {
  const router = useRouter();
  const { query } = router.query;
  console.log(query);

  const { queryStore } = useContext(Store);

  const getGame = async () => {
    if (typeof query === "string") {
      await queryStore.getGamesByQuery(query);
      console.log(games);
    }
  };

  const expandGames = async () => {
    await queryStore.expandGames();
  };

  const { games } = queryStore;

  useEffect(() => {
    getGame();
  }, [query]);
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <Layout>
        {queryStore.isLoading ? (
          <div className="w-full h-screen flex justify-center items-center">
            <Oval color="white" />
          </div>
        ) : (
          games &&
          queryStore.count && (
            <InfiniteScroll
              dataLength={games.length}
              next={expandGames}
              hasMore={games.length < queryStore.count}
              loader={<h4>Loading...</h4>}
            >
              <main className="flex flex-col gap-3">
                {games &&
                  games.map((game) => {
                    return (
                      <Listitem
                        key={game.id}
                        gameid={game.id}
                        background_image={game.background_image}
                        release_date={game.released}
                        stars={game.rating}
                        parent_platforms={game.parent_platforms}
                        title={game.name}
                      />
                    );
                  })}
              </main>
            </InfiniteScroll>
          )
        )}
      </Layout>
    </div>
  );
});

export default SearchQuery;
